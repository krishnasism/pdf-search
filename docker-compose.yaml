version: '3'

services:
  app:
    build: ./app/
    ports:
      - "8000:8000"
    depends_on:
      - "sqs"
      - "parse-engine"
      - "db"
    networks:
      - heissdocs-network
    network_mode: bridge

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: heissdocs
    networks:
      - heissdocs-network
    network_mode: bridge
    ports:
      - '5432:5432'
    volumes:
    - ./init-scripts:/docker-entrypoint-initdb.d

  sqs:
    image: softwaremill/elasticmq
    networks:
      - heissdocs-network
    network_mode: bridge
    ports:
      - "9324:9324"
      - "9325:9325"

  parse-engine:
    build: ./engine/
    networks:
      - heissdocs-network
    network_mode: bridge
    depends_on:
      - "sqs"

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
    networks:
      - heissdocs-network
    network_mode: bridge
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: server /data
    volumes:
      - minio_data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - heissdocs-network
    network_mode: bridge
    volumes:
      - esdata:/usr/share/elasticsearch/data

  frontend:
    build: ./frontend/
    ports:
      - "80:80"
    networks:
      - heissdocs-network
    network_mode: bridge

volumes:
  minio_data:
  esdata:

networks:
  heissdocs-network: